<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.WxBrowserDao">

    <!--添加某个浏览记录-->
    <insert id="addBrowsePost" parameterType="com.alibaba.fastjson.JSONObject">

        insert into  fly_browse (onuser_id, post_id) values(#{onUserId},#{postId});
    </insert>
    <!--后台显示浏览记录表-->
    <select id="getBrowseList"  parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
       select  DATE_FORMAT(browse.create_time,'%Y.%m.%d %T') createTime,browse.browse_id browseId,users.user_name onUserName,
       browse.post_id postId,p.post_content postContent
        from fly_browse  browse,fly_user users,tyn_post p
        <where>
            users.user_id =browse.onuser_id and p.id =browse.post_id
            <if test="userName != null and userName != ''">
                and  users.user_name LIKE CONCAT(CONCAT('%',#{userName}),'%')
            </if>
            order by browse.create_time desc
        </where>
        LIMIT #{offSet}, #{pageRow};
    </select>
    <!--后台计算浏览记录数-->
    <select id="countBrowse" parameterType="com.alibaba.fastjson.JSONObject" resultType="java.lang.Integer">
        select count(0) from fly_browse;
    </select>
    <!--前台显示当前用户浏览记录-->
    <select id="getBrowseByUser" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        select
            DATE_FORMAT(max(browse.create_time), '%Y.%m.%d %T')  createTime,browse.browse_id browseId,
            users.user_name onUserName,browse.post_id postId,p.post_content postContent
        from fly_browse  browse,fly_user users,tyn_post p
        where  users.user_id =browse.onuser_id and p.id =browse.post_id
          and browse.onuser_id =#{onUserId} group by post_id
    </select>
    <resultMap id="postMap" type="com.heeexy.example.util.model.One2Many">
        <id column="tId" property="tId"/>
        <result column="uid" property="uid"/>
        <result column="avatarUrl" property="avatarurl"/>
        <result column="username" property="username"/>
        <result column="types" property="types"/>
        <result column="time1" property="time"/>
        <result column="address" property="address"/>
        <result column="descrb" property="desc"/>
        <result column="likestate" property="likestate"/>
        <result column="collectionstate" property="collectionState"/>
        <result column="seepeople" property="seepeople"/>
        <collection property="imgUrl" ofType="String">
            <id column="imgUrl" property="imgUrl"/>
        </collection>
        <collection property="goods" ofType="String">
            <id column="good" property="good"/>
        </collection>
        <collection property="comments" ofType="com.alibaba.fastjson.JSONObject">
            <id column="commentsid" property="commentsuserid"/>
            <id column="commentsimg" property="commentsimg"/>
            <id column="commentstext" property="commentstext"/>
            <id column="commentsname" property="commentsname"/>
            <id column="toComentName" property="toComentName"/>
            <id column="commentid" property="commentsid"/>
        </collection>
    </resultMap>
    <!--我的足迹-->
    <select id="myBrowse" resultMap="postMap" >


      select
          N.*,g.*,
          (select lu.user_name  from fly_user lu,lc_comment cl
        where lu.user_id=cl.from_user_id and  cl.comment_id =g.to_comment_id) toComentName,
          (select count(0) from fly_browse b where b.post_id=g.post_id) seepeople
      from
        (select
            p.id tId,u.user_id uid,u.user_photo  avatarUrl,u.user_name username,ptg.business_subway_name types,
            p.post_content descrb,like2.likeUserName good, c.display collectionstate,
            pmg.img imgUrl,p.post_location address,DATE_FORMAT(p.post_time, '%Y-%m-%d %T')  time1
        from fly_user u
          left join tyn_post p on u.user_id =p.post_owner and p.delete_state =1
          left  join tyn_post_tag  t on t.tag_id = p.post_sort
          left join  (select pt.post_id,cqy.business_subway_name from cqy_business_subway cqy,tyn_post_tag  pt
        where cqy.business_subway_id = pt.tag_type )  ptg on t.post_id = ptg.post_id
         right  join (select users.user_photo usersPhoto,users.user_name likeUserName,likes.post_id
        from fly_like likes,fly_user users
        where users.user_id= likes.onuser_id and likes.like_state =1) like2 on p.id =like2.post_id
          left join
           (select post.id,pig.img
        from tyn_post_img pig,tyn_post post
        where post.id= pig.post_id and post.delete_state = 1) pmg  on pmg.id =like2.post_id
         left join cqy_post_collect c on c.post_id =pmg.id
        ) N,(
        select z.commentid,z.commentstext,z.commentsimg,z.commentsname,z.commentsid,z.to_comment_id,
         f.like_state likestate,b.post_id,b.onuser_id,
         DATE_FORMAT(max(b.create_time), '%Y-%m-%d %T') browseTime
        from
       fly_browse b
        left join
        (select
             lc.post_id, lc.from_user_id commentsid,uu.user_name commentsname,lc.to_comment_id ,
             uu.user_photo commentsimg,lc.comment_content commentstext,lc.comment_id commentid
            from lc_comment lc ,fly_user uu
            where uu.user_id=lc.from_user_id and lc.comment_status !=-1)
             z on z.post_id =b.post_id
             left join
             fly_like f
             on z.post_id =f.post_id group by b.post_id
             ) g

      where   g.post_id=N.tId and g.onuser_id=#{uid}
    </select>
</mapper>