<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.WxLikeDao">
    <!--添加用户点赞帖子-->
    <insert id="addLike" parameterType="com.alibaba.fastjson.JSONObject">
        insert  into  fly_like (onuser_id, post_id, user_id, like_state) values (#{onUserId},#{postId},#{userId},1);
    </insert>

    <!--网页查找单个用户点赞帖子列表-->
    <select id="getLikeByUserId" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
       select
          like1.like_id likeId, like1.onuser_id onUserId,u.user_name onUserName,like1.post_id postId,
          p.post_content postContent,uu.user_name userName,
          like1.like_state likeState,DATE_FORMAT(like1.create_time, '%Y.%m.%d %T')  createTime,
          DATE_FORMAT(like1.update_time, '%Y.%m.%d %T')  updateTime
      from fly_like like1,fly_user u, fly_user uu ,tyn_post p
      where like1.onuser_id =u.user_id and like1.user_id = uu.user_id and p.id =like1.post_id
        and like1.onuser_id =#{onUserId} and like1.like_state =1 ;
    </select>
    <!--后台每个用户点赞帖子记录-->
    <select id="getLikeList" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">

       select
          like1.like_id likeId, like1.onuser_id onUserId,u.user_name onUserName,like1.post_id postId,
          p.post_content postContent,uu.user_name userName,
          like1.like_state likeState,DATE_FORMAT(like1.create_time, '%Y.%m.%d %T')  createTime,
          DATE_FORMAT(like1.update_time, '%Y.%m.%d %T')  updateTime
      from fly_like like1,fly_user u, fly_user uu ,tyn_post p
      <where>
            like1.onuser_id =u.user_id and like1.user_id = uu.user_id and p.id =like1.post_id and like1.like_state =1
            <if test="userName != null and userName != ''">
                and  u.user_name LIKE CONCAT(CONCAT('%',#{userName}),'%')
            </if>
      </where>
        LIMIT #{offSet}, #{pageRow};
    </select>
    <!--后台每个用户点赞帖子列表计算-->
    <select id="countPostLike" parameterType="com.alibaba.fastjson.JSONObject" resultType="java.lang.Integer">
        select count(0) from fly_like
    </select>
    <!--前台某个用户点赞帖子列表计算-->
    <select id="countPostLikeByUserId" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        select count(0) likeNumber,onuser_id onUserId from fly_like
        where onuser_id = #{onUserId} and like_state = 1
    </select>

    <!--查找用户是否已点赞该帖子信息-->
    <select id="getLikeUserPost" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        select like_id likeId, onuser_id onUserId,like_state likeState from fly_like
        where onuser_id =#{onUserId} and post_id =#{postId};
    </select>
    <!--取消帖子用户点赞状态-->
    <update id="updateLikeByUserId" parameterType="com.alibaba.fastjson.JSONObject">
            update fly_like set like_state = 0 where like_id = #{likeId};
    </update>
    <!--添加帖子用户点赞状态-->
    <update id="addLikeByUserId" parameterType="com.alibaba.fastjson.JSONObject">
            update fly_like set like_state = 1 where like_id = #{likeId} and onuser_id =#{onUserId};
    </update>
    <!--查找用户未关注的-->
    <select id="getListMoreLikesById" parameterType="com.alibaba.fastjson.JSONObject" resultType="com.alibaba.fastjson.JSONObject">
        select  likes.like_id likeId,likes.user_id userId,u.user_name userName,users.user_name onUserName
        from  fly_like likes,fly_user u,fly_user users
        where u.user_id=likes.user_id and users.user_id=likes.onuser_id and  likes.like_state =0
    </select>
    <!--批量关注-->
    <update id="addMoreLikes" parameterType="java.util.Map">
        update fly_like set like_state =1 where like_id =#{likeId}
     </update>
    <resultMap id="postMap" type="com.heeexy.example.util.model.One2Many">
        <id column="tId" property="tId"/>
        <result column="uid" property="uid"/>
        <result column="avatarUrl" property="avatarUrl"/>
        <result column="username" property="username"/>
        <result column="types" property="types"/>
        <result column="time1" property="time"/>
        <result column="address" property="address"/>
        <result column="descrb" property="desc"/>
        <result column="likestate" property="likestate"/>
        <result column="collectionstate" property="collectionstate"/>
        <result column="seepeople" property="seepeople"/>
        <collection property="imgUrls" ofType="String">
            <id column="imgUrl" property="imgUrl"/>
        </collection>
        <collection property="goods" ofType="String">
            <id column="good" property="good"/>
        </collection>
        <collection property="lcments" ofType="java.util.Map">
            <id column="commentsid" property="commentsId"/>
            <id column="commentsimg" property="commentUserId"/>
            <id column="commentstext" property="commentsText"/>
            <id column="commentsname" property="commentsName"/>
        </collection>
    </resultMap>
    <!--我的点赞-->
    <select id="myLike" resultMap="postMap">
        select
          N.*
      from
        (select
            p.id tId,u.user_id uid,u.user_photo  avatarUrl,u.user_name username,ptg.business_subway_name types,
            p.post_content descrb, like2.usersPhoto good,l.like_state likestate,c.display collectionstate,
            pmg.img imgUrl,p.post_location address,DATE_FORMAT(p.post_time, '%Y.%m.%d %T')  time1,
          m.commentsid,m.commentsimg,m.commentsname,m.commentstext
        from fly_user u
          left join tyn_post p on u.user_id =p.post_owner and p.delete_state =1
          left join  (select pt.post_id,cqy.business_subway_name from cqy_business_subway cqy,tyn_post_tag  pt
        where cqy.business_subway_id = pt.tag_type )  ptg on p.id = ptg.post_id
          left join cqy_post_collect c on c.post_id =ptg.post_id
          left join fly_like l on l.post_id =c.post_id
          left  join (select users.user_photo usersPhoto,likes.post_id
        from fly_like likes,fly_user users
        where users.user_id= likes.onuser_id and likes.like_state =1) like2 on l.post_id =like2.post_id
          left join   (select post.id,pig.img
        from tyn_post_img pig,tyn_post post
        where post.id= pig.post_id and post.delete_state = 1) pmg  on pmg.id =like2.post_id
        left join (select
          lc.post_id,lc.from_user_id commentsid,uu.user_name commentsname,
          uu.user_photo commentsimg,lc.comment_content commentstext
         from lc_comment lc ,fly_user uu
         where uu.user_id=lc.from_user_id and lc.comment_status in (0,1)) m on m.post_id =pmg.id
        ) N,fly_like f

      where  f.post_id =N.tId and f.onuser_id =#{uid} and f.like_state =1
    </select>
</mapper>