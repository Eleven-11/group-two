<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.PostExhibitDao">

    <resultMap id="postMap" type="com.heeexy.example.util.model.One2Many">
        <id column="tId" property="tId"/>
        <result column="uid" property="uid"/>
        <result column="username" property="username"/>
        <result column="time" property="time"/>
        <result column="address" property="address"/>
        <result column="describ" property="desc"/>
        <result column="types" property="types"/>
        <result column="seepeople" property="seepeople"/>
        <collection property="imgUrls" ofType="String">
            <id column="imgUrl" property="imgUrl"/>
        </collection>
        <collection property="goods" ofType="String">
            <id column="good" property="good"/>
        </collection>
        <collection property="comments" ofType="java.util.HashMap">
            <id column="commentId" property="commentId"/>
            <id column="commentUserId" property="commentUserId"/>
            <id column="commentText" property="commentText"/>
            <id column="commentName" property="commentName"/>
        </collection>
    </resultMap>
    <select id="getTopPost" resultMap="postMap">
    select
    oop.*,
    comment_id                              commentId,
    from_user_id                            commentUserId,
    comment_content                         commentText,
    user_name                               commentName
    from
        (
        SELECT
        op.*,
        img                                      imgUrl,
        user_name                                good,
        (SELECT COUNT(0) FROM fly_browse b WHERE b.post_id=op.tId)+viewOff seepeople
         from(
                 SELECT
                     tyn_post.id                            tId,
                     post_owner                              uid,
                     user_name                               username,
                     user_photo                              avatarUrl,
                     DATE_FORMAT(post_time, '%Y.%m.%d %T')   time,
                     post_location                           address,
                     post_content                            desc,
                     categories_name                         types,
                     view_offset			                 viewOff
                 FROM tyn_post,fly_user,cqy_post_categories,tyn_post_tag tpt
                 <where>
                     delete_state =1  and user_id=post_owner and categories_id=post_sort
                     <if test="isTop!= null and isTop != ''">
                         and is_top like #{isTop}
                     </if>
                     <if test="tagType!=null and tagType!='' ">
                         and id=tpt.post_id and tag_type=#{tagType}
                     </if>
                 </where>
                 LIMIT #{offSet}, #{pageRow}
             ) op
             left join tyn_post_img tpi on tId=tpi.post_id
             left join fly_like fl on tId=fl.post_id and like_state=1
             left join fly_user fu on onuser_id=fu.user_id
        )oop
        left join lc_comment lc on tId=lc.post_id and comment_status in (0,1)
        left join fly_user on from_user_id = user_id
        ORDER BY if(#{getType}==4,seepeople,time) Desc
    </select>

    <select id="getNormalPost" resultMap="postMap">
    select
    oop.*,
    comment_id              commentId,
    from_user_id            commentUserId,
    comment_content         commentText,
    user_name               commentName
    from(
        SELECT
        op.*,
        img imgUrl,
        (SELECT COUNT(0) FROM fly_browse b WHERE b.post_id=op.tId)+viewOff seepeople
        from(
            SELECT
            tyn_post.id         tId,
            post_owner          uid,
            user_name           username,
            user_photo          avatarUrl,
            DATE_FORMAT(post_time, '%Y.%m.%d %T') time,
            post_location       address,
            post_content        desc,
            categories_name     types,
            view_offset         viewOff
            FROM tyn_post,fly_user,cqy_post_categories,tyn_post_tag tpt
            <where>
                delete_state =1 and user_id=post_owner and categories_id=post_sort
                 <if test="isTop!= null and isTop != ''">
                    and is_top not like #{isTop}
                 </if>
                 <if test="tagType!=null and tagType!='' ">
                    and id=tpt.post_id and tag_type=#{tagType}
                 </if>
                 <if test="getType==5">
                    and categories_name='月租短租'
                 </if>
             </where>
                LIMIT #{offSet}, #{pageRow}
             ) op
            left join tyn_post_img tpi on tId=tpi.post_id
            left join fly_like fl on tId=fl.post_id and like_state=1
            left join fly_user fu on onuser_id=fu.user_id
        )oop
        left join lc_comment lc on tId=lc.post_id and comment_status in (0,1)
        left join fly_user on from_user_id = user_id
        ORDER BY if(#{getType}==4,seepeople,time) Desc

    </select>

    <select id="queryTagType" parameterType="java.lang.String" resultType="java.lang.Integer">
        select business_subway_id
        from cqy_business_subway
        where business_subway_name=#{tagName}
    </select>
    <select id="isLike" resultType="java.lang.Integer">
        select count(0) from fly_like where post_id=#{postId} and onuser_id=#{userId}
    </select>
    <select id="isCollect" resultType="java.lang.Integer">
        select count(0) from cqy_post_collect where post_id=#{postId} and user_id=#{userId} and  display=1
    </select>



    <resultMap id="postDetailMap" type="com.heeexy.example.util.model.One2Many">
        <id column="tId" property="tId"/>
        <result column="uid" property="uid"/>
        <result column="avatarUrl" property="avatarUrl"/>
        <result column="username" property="username"/>
        <result column="telephone" property="telephone"/>
        <result column="time" property="time"/>
        <result column="sortId" property="sortId"/>
        <result column="types" property="types"/>
        <result column="desc" property="desc"/>
        <result column="address" property="address"/>
        <result column="postPhone" property="postPhone"/>
        <result column="priceLow" property="priceLow"/>
        <result column="priceHigh" property="priceHigh"/>
        <result column="timeStart" property="timeStart"/>
        <result column="timeEnd" property="timeEnd"/>
        <result column="isTop" property="isTop"/>
        <result column="likeOff" property="likeOff"/>
        <result column="collectOff" property="collectOff"/>
        <result column="viewOff" property="viewOff"/>
        <collection property="tagList" ofType="String">
            <id column="tagName" property="tagName"/>
        </collection>
        <collection property="imgUrls" ofType="String">
            <id column="imgUrl" property="imgUrl"/>
        </collection>
        <collection property="goods" ofType="String">
            <id column="good" property="good"/>
        </collection>
        <collection property="comments" ofType="java.util.HashMap">
            <id column="commentId" property="commentId"/>
            <id column="commentUserId" property="commentUserId"/>
            <id column="commentText" property="commentText"/>
            <id column="commentName" property="commentName"/>
        </collection>
    </resultMap>
    <select id="queryThePost." resultMap="postDetailMap">
           SELECT
            p.*,
            bs.business_subway_name                            tagName,
            pi.img                                             imgName
        FROM (
                 SELECT
                     id                                      tId,
                     post_owner                              uid,
                     user_name                               username,
                     DATE_FORMAT(post_time, '%Y.%m.%d %T')   time,
                     post_sort                               sortId,
                     categories_name                         types,
                     post_content                            desc,
                     post_location                           address,
                     post_phone                              postPhone,
                     price_low                               priceLow,
                     price_high                              priceHigh,
                     time_start                              timeStart,
                     time_end                                timeEnd,
                     is_top                                  isTop,
					 like_offset  							 likeOff,
					 collect_offset					         collectOff,
                     view_offset			                 viewOff
                 FROM tyn_post,fly_user,cqy_post_categories
                 WHERE id=#{tId} and user_id=post_owner and categories_id=post_sort
             ) p
            LEFT JOIN tyn_post_tag pt ON p.tId=pt.post_id
            left join cqy_business_subway bs on pt.tag_id=bs.business_subway_id
            left join tyn_post_img pi on pi.post_id=p.tId

    </select>
    <select id="getAllSorts" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            categories_id        sortId,
            categories_name      types
        FROM cqy_post_categories
        WHERE display=1
    </select>

    <update id="updatePost">
        update  tyn_post
        set
        post_sort= #{sortId},
        post_content= #{desc},
        like_offset= #{likeOff},
        collect_offset= #{collectOff},
        view_offset= #{viewOff}
        where
        id= #{tId}
    </update>
    <update id="updatePostTop">
        UPDATE tyn_post
        SET
        is_top = #{isTop}
        WHERE id = #{tId}
    </update>

    <select id="getSomeTag"   resultType="com.alibaba.fastjson.JSONObject">
        select
        business_subway_id    tagId,
        business_subway_name  tagName
        from cqy_business_subway c
        where  c.superior_id = (
        select business_subway_id
        from cqy_business_subway c
        where c.business_subway_name = #{need}
        )
    </select>

    <select id="getNewTagId"   resultType="com.alibaba.fastjson.JSONObject">
        select business_subway_id tId,
        superior_id fId
        from cqy_business_subway
        <where>
            <foreach collection="newTag" item="name" open="business_subway_name in(" close=")" separator=",">
                #{name}
            </foreach>
        </where>
    </select>

    <insert id="addPostTag">
        insert into tyn_post_tag
        (post_id,tag_id,tag_type)
        values
        (#{tId},#{tId},(SELECT superior_id FROM cqy_business_subway WHERE business_subway_id = #{fId}))
    </insert>

    <select id="getDeleteTagId"   resultType="java.lang.Integer">
        select
        business_subway_id tId
        from cqy_business_subway
        <where>
            <foreach collection="deleteTag" item="name" open="business_subway_name in(" close=")" separator=",">
                #{name}
            </foreach>
        </where>
    </select>

    <delete id="deleteTag">
        delete from tyn_post_tag
        where tag_id=#{tId} and post_id=#{tId}
    </delete>

    <select id="getFirstTag" resultType="com.alibaba.fastjson.JSONObject">
        select
        business_subway_name tagName
        from cqy_business_subway
        where superior_id =0
     </select>

    <delete id="deleteImg">
        delete from tyn_post_img
        where img=#{img} and post_id=#{tId}
    </delete>
</mapper>